<apex:page >
    <script type="text/javascript">
        var app = angular.module("Services", []);

        // HomeServices
        app.factory("HomeServices", ["$rootScope", function($rootScope) {
            // 初期処理
            function init(scope) {
                console.log('Welcome Salesforce Developer!');
            }

            return {
                init: function(scope) {
                    return init(scope);
                }
            };
        }]);

        // SerializeServices
        app.factory("SerializeServices", ["$rootScope", function($rootScope) {
            // 初期処理
            function init(scope) {
                console.log('Apex オブジェクトの逐次化時の null 値の抑制');
            }

            // JSON.serialize
            function doSerialize(scope, isSuppressApexObjectNulls) {
                Summer16ApexDemoController.doSerializeJson(
                    isSuppressApexObjectNulls,
                    function(result, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.result = result;
                            // JS側で整形する場合のサンプル
                            //var resultStr = JSON.parse(result);
                            //scope.result = JSON.stringify(resultStr, null, "    ");
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            // JSON.serializePretty
            function doSerializePretty(scope, isSuppressApexObjectNulls) {
                Summer16ApexDemoController.doSerializePrettyJson(
                    isSuppressApexObjectNulls,
                    function(result, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.resultPretty = result;
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doSerialize: function(scope, isSuppressApexObjectNulls) {
                    return doSerialize(scope, isSuppressApexObjectNulls);
                },
                doSerializePretty: function(scope, isSuppressApexObjectNulls) {
                    return doSerializePretty(scope, isSuppressApexObjectNulls);
                },
            };
        }]);

        // PopulatedFieldsAsMapServices
        app.factory("PopulatedFieldsAsMapServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('入力された SObject 項目の対応付けの取得');
            }

            // getPopulatedFieldsAsMap Demo
            function doGetPopulatedFieldsAsMap(scope) {
                Summer16ApexDemoController.doPopulatedFieldsAsMapDemo(
                    function(results, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.results = results;
                            console.log(results);
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doGetPopulatedFieldsAsMap: function(scope) {
                    return doGetPopulatedFieldsAsMap(scope);
                }
            };
        }]);

        // PlatformActionLimitQueryServices
        app.factory("PlatformActionLimitQueryServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('LIMIT 句を使用した PlatformAction に対する SOQL クエリの実行');
            }

            // doLimitOnPlatformActionQuery
            function doLimitOnPlatformActionQuery(scope) {
                Summer16ApexDemoController.doRemovalOfLimitOnPlatformactionQuery(
                    function(results, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.results = results;
                            console.log(results);
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doLimitOnPlatformActionQuery: function(scope) {
                    return doLimitOnPlatformActionQuery(scope);
                }
            };
        }]);

        // ToolingApiApexTestsServices
        app.factory("ToolingApiApexTestsServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('ToolingAPIのrunTestsAsynchronousとtestLevelパラメータ');
            }

            // doRunTestsAsynchronous
            function doRunTestsAsynchronous(scope) {
                Summer16ApexDemoController.doRunTestsAsynchronous(
                    function(result, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.result = result;
                            console.log(result);
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doRunTestsAsynchronous: function(scope) {
                    return doRunTestsAsynchronous(scope);
                }
            };
        }]);

        // IsMruEnabledServices
        app.factory("IsMruEnabledServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('Schema.DescribeSObjectResult クラスの新しいメソッド - isMruEnabled()');
            }

            // getIsMruEnabledInfo
            function getIsMruEnabledInfo(scope) {
                Summer16ApexDemoController.getIsMruEnabledInfo(
                    function(results, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.results = results;
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                getIsMruEnabledInfo: function(scope) {
                    return getIsMruEnabledInfo(scope);
                }
            };
        }]);

        // SoslFormatServices
        app.factory("SoslFormatServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('SOSLのFORMATをつかってローカライズされた書式の適用');
            }

            // doSoslQuery
            function doSoslQuery(scope) {
                if (!scope.searchKey) {
                    alert('検索条件を入力してください');
                    return false;
                }
                
                Summer16ApexDemoController.doSoslFormatQuery(
                    scope.searchKey,
                    function(results, event) {
                        if(event.status) {
                            // 結果をセット
                            scope.results = results;
                            console.log(results);
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doSoslQuery: function(scope) {
                    return doSoslQuery(scope);
                }
            };
        }]);

        // SoslSnippetServices
        app.factory("SoslSnippetServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('SOSLのSnippetをつかってハイライト情報取得');
            }

            // doSoslQuery
            function doSoslQuery(scope) {
                if (!scope.searchKey) {
                    alert('検索条件を入力してください');
                    return false;
                }

                Summer16ApexDemoController.doSoslSnippetQuery(
                    scope.searchKey,
                    function(result, event) {
                        if(event.status) {
                            // 結果をセット
                            console.log(result);
                            var resultStr = JSON.parse(result);
                            scope.result = JSON.stringify(resultStr, null, "    ");
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doSoslQuery: function(scope) {
                    return doSoslQuery(scope);
                }
            };
        }]);

        // SoslMetadataServices
        app.factory("SoslMetadataServices", ["$rootScope", function($rootScope) {

            // 初期処理
            function init(scope) {
                console.log('SOSLでMatadata情報取得');
            }

            // doSoslQuery
            function doSoslQuery(scope) {
                if (!scope.searchKey) {
                    alert('検索条件を入力してください');
                    return false;
                }

                Summer16ApexDemoController.doSoslMetadataQuery(
                    scope.searchKey,
                    function(result, event) {
                        if(event.status) {
                            // 結果をセット
                            console.log(result);
                            var resultStr = JSON.parse(result);
                            scope.result = JSON.stringify(resultStr, null, "    ");
                        } else {
                            alert(event.message);
                        }
                        // Viewに反映
                        $rootScope.$apply();
                    },
                    { buffer: true, escape: false, timeout: 30000 }
                );
            }

            return {
                init: function(scope) {
                    return init(scope);
                },
                doSoslQuery: function(scope) {
                    return doSoslQuery(scope);
                }
            };
        }]);
    </script>
</apex:page>